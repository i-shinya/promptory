//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.6

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "prompt_manger_versions")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub version: i32,
    pub manager_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::assistant_settings::Entity")]
    AssistantSettings,
    #[sea_orm(has_many = "super::chat_settings::Entity")]
    ChatSettings,
    #[sea_orm(
        belongs_to = "super::prompt_manager::Entity",
        from = "Column::ManagerId",
        to = "super::prompt_manager::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    PromptManager,
    #[sea_orm(has_many = "super::run_histories::Entity")]
    RunHistories,
}

impl Related<super::assistant_settings::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AssistantSettings.def()
    }
}

impl Related<super::chat_settings::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ChatSettings.def()
    }
}

impl Related<super::prompt_manager::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PromptManager.def()
    }
}

impl Related<super::run_histories::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::RunHistories.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
